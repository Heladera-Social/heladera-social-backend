.section.container.storage-edit
  .container-fluid
    .row
      .col-xs-12.col-md-8
        h2
          = "Generar extraccion"
    .row
      p#error
        = flash[:error]
      = nested_form_for @extraction, :method => "post" do |f|
        .row
          .col-xs-12.col-md-4
          	= f.label :Comedor
            = f.select "storage_unit_id", options_for_select(@storage_units.collect {|p| [ p['name'], p['id'] ] }), required: true


        = f.fields_for :extraction_products do |products|
          .row
            .barcode-section
                  = f.label :Codigo_de_barras
                  br
                  = number_field_tag :days, nil ,min: 0, class: 'barcode orange-input', placeholder: "12312312312312"
                  button.btn-primary type="button" href="#" onclick="getProductFromBarCode()"
                    = "Obtener"
            .col-xs-4.col-md-4
              = f.label :Producto
              br
              = products.select "product_id", options_for_select(@product_types.collect {|p| [ p['name'], p['id'] ] }),required: true
            .col-xs-4.col-md-4
              = f.label :Cantidad
              p.extraction-maximum-amount-warning
              = products.number_field :quantity, class: 'form-control, orange-input', required: true, placeholder: "1", id:"amount"
            .col-xs-4.col-md-4
              = products.link_to_remove do 
                = image_tag "error.png", class: 'cancel-product'
          hr
        p
          = f.link_to_add "Agregar producto a extraer", :extraction_products, onclick: 'addProductSelect()', class: 'btn btn-primary'
        .row
          .col-xs-12.col-md-4
          .col-xs-12.col-md-4
          .col-xs-12.col-md-4
            = f.submit "Registrar Extracci√≥n", class: "btn btn-primary btn-extractions submit-donation"
